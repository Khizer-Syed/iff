{"ast":null,"code":"import { take } from 'rxjs/operators';\nimport { MeasuringGuideModalComponent } from '../components/measuring-guide-modal/measuring-guide-modal.component';\nimport { SuccessModalComponent } from '../components/success-modal/success-modal.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ng-bootstrap/ng-bootstrap\";\nexport let ModalService = /*#__PURE__*/(() => {\n  class ModalService {\n    constructor(ngbModal) {\n      this.ngbModal = ngbModal;\n    }\n\n    openMeasuringGuideModal() {\n      const modalRef = this.ngbModal.open(MeasuringGuideModalComponent, {\n        centered: true,\n        size: 'lg'\n      });\n      modalRef.componentInstance.dismiss.pipe(take(1)).subscribe(() => {\n        modalRef.close();\n      });\n    }\n\n    openDismissibleSuccessModal(seconds = 2000) {\n      const modalRef = this.ngbModal.open(SuccessModalComponent, {\n        centered: true,\n        size: 'lg',\n        backdrop: 'static'\n      });\n      setTimeout(() => {\n        modalRef.close();\n      }, seconds);\n    }\n\n  }\n\n  ModalService.ɵfac = function ModalService_Factory(t) {\n    return new (t || ModalService)(i0.ɵɵinject(i1.NgbModal));\n  };\n\n  ModalService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ModalService,\n    factory: ModalService.ɵfac,\n    providedIn: 'root'\n  });\n  return ModalService;\n})();","map":null,"metadata":{},"sourceType":"module"}