{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { ContainerSize, ContainerType, DimensionalUnit, Prompt, ShippingMode, ShippingPoint, ShippingVolume, TermsOfSale, WeightUnit } from './constants';\nimport { nonZeroValidator } from './validators/non-zero.validator';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"./services/quote.service\";\nimport * as i3 from \"./services/modal.service\";\nexport let AppComponent = /*#__PURE__*/(() => {\n  class AppComponent {\n    constructor(fb, quoteService, modalService) {\n      this.fb = fb;\n      this.quoteService = quoteService;\n      this.modalService = modalService;\n      this.currentYear = new Date().getFullYear();\n      this.shippingPoint = ShippingPoint;\n      this.shippingMode = ShippingMode;\n      this.shippingVolume = ShippingVolume;\n      this.dimensionalUnit = DimensionalUnit;\n      this.weightUnit = WeightUnit;\n      this.containerType = ContainerType;\n      this.containerSize = ContainerSize;\n      this.prompt = Prompt;\n      this.termsOfSale = TermsOfSale;\n      this.customerQuote = this.fb.group({\n        name: ['', Validators.required],\n        company: [''],\n        email: ['', [Validators.required, Validators.email]],\n        phone: ['', [Validators.required]],\n        shippingInfo: this.fb.group({\n          origin: this.fb.group({\n            from: ['', [Validators.required]],\n            pickupPoint: [ShippingPoint.Door, [Validators.required]]\n          }),\n          destination: this.fb.group({\n            to: ['', [Validators.required]],\n            deliveryPoint: [ShippingPoint.Door, [Validators.required]]\n          }),\n          shippingMode: [ShippingMode.Air, [Validators.required]]\n        }),\n        items: this.fb.array([], Validators.required),\n        totalVolumeWeight: ['0.000 kg'],\n        totalActualWeight: ['0.000 kg'],\n        token: [null, [Validators.required]],\n        hazardous: [Prompt.No, Validators.required],\n        termsOfSale: [TermsOfSale.ExWorks]\n      });\n      this.addControl();\n    }\n\n    get f() {\n      return this.customerQuote.controls;\n    }\n\n    get c() {\n      return this.f.items;\n    }\n\n    getArrayControls() {\n      return this.c.controls;\n    }\n\n    addControl() {\n      this.c.push(this.fb.group({\n        length: [0, [Validators.required, nonZeroValidator()]],\n        width: [0, [Validators.required, nonZeroValidator()]],\n        height: [0, [Validators.required, nonZeroValidator()]],\n        dimensionalUnit: [DimensionalUnit.cm, [Validators.required]],\n        weight: [0, [Validators.required, nonZeroValidator()]],\n        weightUnit: [WeightUnit.kgs, [Validators.required]],\n        qty: [1, [Validators.required]],\n        volumeWeight: ['0.000 kg', [Validators.required]],\n        actualWeight: ['0.000 kg', [Validators.required]]\n      }));\n    }\n\n    removeControl(i) {\n      this.c.removeAt(i);\n    }\n\n    changeShippingMode(value) {\n      const shippingInfo = this.customerQuote.get('shippingInfo');\n\n      if (value === ShippingMode.Ocean || value === ShippingMode.Land) {\n        shippingInfo.addControl('shippingVolume', this.fb.control(ShippingVolume.LCL, [Validators.required]));\n      } else {\n        shippingInfo.removeControl('shippingVolume');\n        shippingInfo.removeControl('containerType');\n        shippingInfo.removeControl('containerSize');\n      }\n\n      this.customerQuote.setControl('items', this.fb.array([], Validators.required));\n      this.customerQuote.setControl('totalVolumeWeight', this.fb.control('0.000 kg', Validators.required));\n      this.customerQuote.setControl('totalActualWeight', this.fb.control('0.000 kg', Validators.required));\n      this.addControl();\n    }\n\n    checkToAddItems() {\n      var _a, _b;\n\n      const shippingInfo = this.customerQuote.get('shippingInfo');\n      const shippingMode = (_a = shippingInfo.get('shippingMode')) === null || _a === void 0 ? void 0 : _a.value;\n\n      if (shippingMode) {\n        return shippingMode === ShippingMode.Air || (shippingMode === ShippingMode.Ocean || shippingMode === ShippingMode.Land) && ((_b = shippingInfo.get('shippingVolume')) === null || _b === void 0 ? void 0 : _b.value) === ShippingVolume.LCL;\n      }\n\n      return false;\n    }\n\n    changeShippingVolume(value) {\n      const shippingInfo = this.customerQuote.get('shippingInfo');\n\n      if (value === ShippingVolume.FCL) {\n        shippingInfo.addControl('containerType', this.fb.control(ContainerType.Dry, [Validators.required]));\n        shippingInfo.addControl('containerSize', this.fb.control(ContainerSize['20ft'], [Validators.required]));\n        this.customerQuote.removeControl('items');\n        this.customerQuote.removeControl('totalVolumeWeight');\n        this.customerQuote.removeControl('totalActualWeight');\n      } else {\n        shippingInfo.removeControl('containerType');\n        shippingInfo.removeControl('containerSize');\n        this.customerQuote.addControl('items', this.fb.array([], Validators.required));\n        this.customerQuote.addControl('totalVolumeWeight', this.fb.control('0.000 kg', Validators.required));\n        this.customerQuote.addControl('totalActualWeight', this.fb.control('0.000 kg', Validators.required));\n        this.addControl();\n      }\n    }\n\n    resetForm() {\n      this.customerQuote.reset({\n        name: '',\n        company: '',\n        email: '',\n        phone: '',\n        shippingInfo: {\n          origin: {\n            from: '',\n            pickupPoint: ShippingPoint.Door\n          },\n          destination: {\n            to: '',\n            deliveryPoint: ShippingPoint.Door\n          },\n          shippingMode: ShippingMode.Air\n        },\n        token: null,\n        items: [{\n          length: 0,\n          width: 0,\n          height: 0,\n          dimensionalUnit: DimensionalUnit.cm,\n          weight: 0,\n          weightUnit: WeightUnit.kgs,\n          qty: 1,\n          volumeWeight: '0.000 kg',\n          actualWeight: '0.000 kg'\n        }],\n        totalVolumeWeight: '0.000 kg',\n        totalActualWeight: '0.000 kg',\n        hazardous: Prompt.No,\n        termsOfSale: TermsOfSale.ExWorks\n      });\n    }\n\n    requestQuote() {\n      if (this.customerQuote.valid) {\n        this.quoteService.addOne(this.customerQuote.value).subscribe(() => {\n          this.modalService.openDismissibleSuccessModal();\n          this.resetForm();\n        });\n      }\n    }\n\n    calculateVolumeWeight(index) {\n      var _a, _b;\n\n      if (this.validateItem()) {\n        const {\n          length,\n          width,\n          height,\n          dimensionalUnit,\n          qty\n        } = this.c.get([index]).value;\n        (_a = this.c.get([index, 'volumeWeight'])) === null || _a === void 0 ? void 0 : _a.patchValue(Number(length * width * height * qty / 6000 * (dimensionalUnit === DimensionalUnit.cm ? 1 : Math.pow(2.54, 3))).toFixed(3) + ' kg');\n      } else {\n        (_b = this.c.get([index, 'volumeWeight'])) === null || _b === void 0 ? void 0 : _b.patchValue('0.000 kg');\n      }\n\n      this.calculateTotalVolumeWeight();\n    }\n\n    calculateWeight(index) {\n      var _a, _b;\n\n      if (this.validateItem()) {\n        const {\n          weight,\n          weightUnit,\n          qty\n        } = this.c.get([index]).value;\n        (_a = this.c.get([index, 'actualWeight'])) === null || _a === void 0 ? void 0 : _a.patchValue((weightUnit === WeightUnit.kgs ? Number(weight * qty).toFixed(3) : Number(weight * qty / 2.20462).toFixed(3)) + ' kg');\n      } else {\n        (_b = this.c.get([index, 'actualWeight'])) === null || _b === void 0 ? void 0 : _b.patchValue('0.000 kg');\n      }\n\n      this.calculateTotalWeight();\n    }\n\n    validateItem() {\n      var _a;\n\n      const shippingInfo = (_a = this.customerQuote.get('shippingInfo')) === null || _a === void 0 ? void 0 : _a.value;\n      return shippingInfo && (shippingInfo.shippingMode === ShippingMode.Air || (shippingInfo.shippingMode === ShippingMode.Ocean || shippingInfo.shippingMode === ShippingMode.Land) && shippingInfo.shippingVolume === ShippingVolume.LCL);\n    }\n\n    calculateTotalWeight() {\n      var _a;\n\n      (_a = this.customerQuote.get('totalActualWeight')) === null || _a === void 0 ? void 0 : _a.patchValue(Number(this.c.value.reduce((sum, elem) => {\n        return sum + (elem.weightUnit === WeightUnit.kgs ? elem.weight * elem.qty : elem.weight * elem.qty / 2.20462);\n      }, 0)).toFixed(3) + ' kg');\n    }\n\n    calculateTotalVolumeWeight() {\n      var _a;\n\n      (_a = this.customerQuote.get('totalVolumeWeight')) === null || _a === void 0 ? void 0 : _a.patchValue(Number(this.c.value.reduce((sum, elem) => {\n        return sum + elem.length * elem.width * elem.height * elem.qty / 6000 * (elem.dimensionalUnit === DimensionalUnit.cm ? 1 : Math.pow(2.54, 3));\n      }, 0)).toFixed(3) + ' kg');\n    }\n\n    updateQty(i) {\n      this.calculateVolumeWeight(i);\n      this.calculateWeight(i);\n    }\n\n    openMeasuringGuide() {\n      this.modalService.openMeasuringGuideModal();\n    }\n\n    changeHazardRating(val) {\n      if (val === Prompt.Yes) {\n        this.customerQuote.setControl('unNumber', this.fb.control('', Validators.required));\n        this.customerQuote.setControl('pageNumber', this.fb.control(''));\n        this.customerQuote.setControl('classNumber', this.fb.control(''));\n        this.customerQuote.setControl('packingGroup', this.fb.control(''));\n      } else {\n        this.customerQuote.removeControl('unNumber');\n        this.customerQuote.removeControl('pageNumber');\n        this.customerQuote.removeControl('classNumber');\n        this.customerQuote.removeControl('packingGroup');\n      }\n    }\n\n    changeTermsOfSale(val) {\n      if (val === TermsOfSale.Other) {\n        this.customerQuote.setControl('termsOfSaleOther', this.fb.control(''));\n      } else {\n        this.customerQuote.removeControl('termsOfSaleOther');\n      }\n    }\n\n  }\n\n  AppComponent.ɵfac = function AppComponent_Factory(t) {\n    return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.QuoteService), i0.ɵɵdirectiveInject(i3.ModalService));\n  };\n\n  AppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AppComponent,\n    selectors: [[\"app-root\"]],\n    decls: 1,\n    vars: 0,\n    template: function AppComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtext(0, \" Hello\\n\");\n      }\n    },\n    styles: [\".brand-wrapper[_ngcontent-%COMP%]{height:80vh;background:linear-gradient(to bottom,#90dffe 0%,#38a3d1 100%);position:relative}.brand-wrapper__2[_ngcontent-%COMP%]:after{content:\\\"\\\";background:url(/../assets/img/clouds.png);background-size:contain;position:absolute;inset:0;animation:animate-left-aeroplane 10s linear infinite}.brand-wrapper[_ngcontent-%COMP%]   .sub-heading[_ngcontent-%COMP%]{position:relative}.brand-wrapper[_ngcontent-%COMP%]   .sub-heading[_ngcontent-%COMP%]:after{content:\\\"GUARANTEE\\\";position:absolute;background:#f5ce42;color:#000;font-weight:700;padding:8px 12px;font-size:1rem;bottom:-18px;right:125px;transform:rotate(-10deg)}.brand-wrapper[_ngcontent-%COMP%]   .animate-right[_ngcontent-%COMP%]{animation:animate-right 1.5s ease-out}.brand-wrapper[_ngcontent-%COMP%]   .animate-left[_ngcontent-%COMP%]{animation:animate-left 1.5s ease-out}@keyframes animate-right{0%{transform:translate(-100vw)}to{transform:translate(0)}}@keyframes animate-left{0%{transform:translate(100vw)}to{transform:translate(0)}}@keyframes animate-left-aeroplane{0%{transform:translate(100vw)}to{transform:translate(-100vw)}}.services-icon[_ngcontent-%COMP%]{display:flex;justify-content:center;align-items:center;font-size:4rem;margin-bottom:3rem;color:#1e5799}.forms[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]{color:#eee}.testimonials[_ngcontent-%COMP%]   .img_name[_ngcontent-%COMP%]{height:40px;width:40px;background-color:#eee;border-radius:50%;display:flex;justify-content:center;align-items:center}.testimonials[_ngcontent-%COMP%]   .google_g_logo[_ngcontent-%COMP%]{height:30px;width:30px}.testimonials[_ngcontent-%COMP%]   .google_g_logo[_ngcontent-%COMP%]   img[_ngcontent-%COMP%]{height:100%;width:100%}.testimonials[_ngcontent-%COMP%]   .overall_google_rating[_ngcontent-%COMP%]{height:100%;display:flex;flex-direction:column;justify-content:center;align-items:center}.testimonials[_ngcontent-%COMP%]   .overall_google_rating[_ngcontent-%COMP%]   .google_logo[_ngcontent-%COMP%]{height:35px;width:94px}.testimonials[_ngcontent-%COMP%]   .overall_google_rating[_ngcontent-%COMP%]   .google_logo[_ngcontent-%COMP%]   img[_ngcontent-%COMP%]{height:100%;width:100%}.testimonials-wrapper__testimonial[_ngcontent-%COMP%]{overflow-y:auto;max-height:120px;height:120px}.star[_ngcontent-%COMP%]{position:relative;display:inline-block;color:#d3d3d3}.filled[_ngcontent-%COMP%]{color:#ffdf00}.half[_ngcontent-%COMP%]{position:absolute;display:inline-block;overflow:hidden;color:#ffdf00}\"]\n  });\n  return AppComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}