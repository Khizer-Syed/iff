# This is a basic workflow to help you get started with Actions

name: DigitalOcean-CI

# Controls when the workflow will run
on:
    # Triggers the workflow on pull request events but only for the production branch
    pull_request:
        branches: [do-production]
        types: [closed]

    # Allows you to run this workflow manually from the Actions tab
    workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
    # This workflow contains a single job called "build"
    deploy_DigitalOcean:
        # Run this job only when the PR is merged
        if: github.event_name == 'workflow_dispatch' || github.event.pull_request.merged
        # The type of runner that the job will run on
        runs-on: ubuntu-latest

        # Steps represent a sequence of tasks that will be executed as part of the job
        steps:
            # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
            - uses: actions/checkout@v4
            - uses: actions/setup-node@v4
              with:
                  node-version: 'v16'
                  cache: 'npm'
            - run: npm install
            # Runs a set of commands using the runners shell
            - name: Create build artifact
              run: |
                    sh build.sh
            - name: Copy artifact to Digital Ocean
              uses: appleboy/scp-action@master
              with:
                  host: ${{ secrets.HOST }}
                  username: ${{ secrets.USERNAME }}
                  key: ${{ secrets.DIGITAL_OCEAN_PRIVATE_SSH_KEY }}
                  source: "iffcargo*.zip"
                  target: '/home/${{ secrets.USERNAME }}/apps'
            - name: Run deployment script
              uses: appleboy/ssh-action@master
              with:
                  host: ${{ secrets.HOST }}
                  username: ${{ secrets.USERNAME }}
                  key: ${{ secrets.DIGITAL_OCEAN_PRIVATE_SSH_KEY }}
                  script: |
                      cd /home/${{ secrets.USERNAME }}/apps
                      ./deploy-iffcargo.sh
